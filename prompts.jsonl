
{"comment": "#OAuth `redirect_uri` bypass using IDN homograph attack resulting in user's access token leakage"}
{"report_id": "861940", "title": "OAuth `redirect_uri` bypass using IDN homograph attack resulting in user's access token leakage", "reporter": "yassineaboukir", "company": "Semrush", "status": "Resolved", "vulnerability": {"weakness": "Information Disclosure", "technique": "IDN Homograph Attack", "vector": "OAuth redirect_uri parameter validation bypass"}, "severity": {"initial": "High", "final": "Medium", "cvss_score": 6.4}, "bounty": {"awarded": true, "amount": "Hidden"}, "timeline": [{"date_utc": "2020-04-29T03:28:00Z", "event": "Report submitted by yassineaboukir."}, {"date_utc": "2020-04-30T11:56:00Z", "event": "Report status changed to Triaged."}, {"date_utc": "2020-05-08T09:14:00Z", "event": "Severity updated from High to Medium (6.4)."}, {"date_utc": "2020-05-08T09:16:00Z", "event": "Bounty awarded to the reporter."}, {"date_utc": "2020-05-08T09:23:00Z", "event": "Reporter confirmed the fix is working."}, {"date_utc": "2020-05-12T10:51:00Z", "event": "Report status changed to Resolved."}, {"date_utc": "2020-06-18T14:33:00Z", "event": "Report disclosed to the public."}], "summary": "The SEMrush OAuth implementation failed to properly validate the `redirect_uri` parameter. This was bypassed using an IDN (Internationalized Domain Name) homograph attack, where characters from different alphabets look identical (e.g., Latin 'e' vs. Cyrillic 'е'). This flaw allowed an attacker to leak a user's access token to a malicious domain.", "proof_of_concept": "The attacker crafts a malicious authorization URL where the `redirect_uri` points to a domain they control, but which looks identical to a legitimate Semrush domain. For example: `redirect_uri=https://oauth.sеmrush.com` (using a Cyrillic 'е'). When a user authorizes the application, their OAuth access code is sent to this malicious, look-alike domain.", "impact_assessment": {"attacker_capabilities": ["Get user ID, email, and list of projects.", "View results of the user's site audit feature.", "Increase web limit counters temporarily."], "limitations": ["The leaked token expires in 7 days.", "Web limit counters reset every 24 hours.", "The token does not allow the attacker to change, create, or delete any data or objects."]}, "resolution": "The issue was fixed by Semrush, and the fix was confirmed by the reporter. The likely fix involves normalizing Unicode characters in the `redirect_uri` to a standard form (like Punycode) before validation, preventing the system from being tricked by visually similar characters."}

{"comment": "#Access Token Smuggling from my.playstation.com via Referer Header"}

{"report_id": "835437", "title": "Access Token Smuggling from my.playstation.com via Referer Header", "reporter": "nnez", "company": "PlayStation", "status": "Resolved", "vulnerability": {"weakness": "Violation of Secure Design Principles", "technique": "Chained Open Redirect", "vector": "Referer Header Leak"}, "severity": {"value": "High", "range": "7-8.9"}, "bounty": {"awarded": true, "amount_usd": 1000}, "timeline": [{"date_utc": "2020-03-31T16:45:00Z", "event": "Report submitted by nnez."}, {"date_utc": "2020-04-01T09:53:00Z", "event": "Report status changed to Triaged."}, {"date_utc": "2020-04-07T16:02:00Z", "event": "Bounty of $1,000 awarded to the reporter."}, {"date_utc": "2020-04-15T20:28:00Z", "event": "Report status initially changed to Resolved."}, {"date_utc": "2020-05-05T17:26:00Z", "event": "Report status changed to Reopened after further discussion."}, {"date_utc": "2020-05-11T17:06:00Z", "event": "Report status changed back to Resolved."}, {"date_utc": "2021-01-12T01:40:00Z", "event": "Report disclosed to the public."}], "summary": "The researcher discovered a method to steal a user's access token by chaining together two separate open redirect vulnerabilities and exploiting a URL parsing flaw. A primary redirector on my.playstation.com was tricked into redirecting to a secondary vulnerable redirector on docs.playstation.com, which would then redirect to an attacker-controlled site.", "proof_of_concept": "The core of the exploit involved manipulating URL parameters and fragments. By adding a '?' to the end of a `returnRoute` parameter inside the URL's hash fragment, the researcher tricked the JavaScript on the page into encoding the access_token (which is normally in the hash) into the query parameters of the next redirection URL. This made the token visible in the Referer header, allowing it to be stolen by the attacker's server.", "impact_assessment": {"attacker_capabilities": ["An attacker could steal a victim's access token for my.playstation.com.", "The token grants access to resources and data associated with the victim's PlayStation account, as defined by the token's scope."], "limitations": []}, "resolution": "The issue was resolved by PlayStation. The fix likely involved correcting the URL parsing logic to prevent parameters in the hash fragment from being improperly encoded and moved into the query string, and potentially adding stricter validation on the redirect endpoints."}
